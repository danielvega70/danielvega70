Animation = Class{}

function Animation:init(def)
    self.frames = def.frames
    self.interval = def.interval
    self.timer = 0
    self.currentFrame = 1
end

function Animation:update(dt)
    -- no need to update if animation is only one frame
    if #self.frames > 1 then
        self.timer = self.timer + dt

        if self.timer > self.interval then
            self.timer = self.timer % self.interval

            self.currentFrame = math.max(1, (self.currentFrame + 1) % (#self.frames + 1))
        end
    end
end

function Animation:getCurrentFrame()
    return self.frames[self.currentFrame]
end
do local _ENV = _ENV 
    if animation scroll then
        animation = animation + 1
        if animation > 1 then
            animation = animation % 1
            animation = math.max(1, (animation + 1) % (#animation + 1))
        end
        self.timer = math.max(1, (self.timer + 1) % (#self.frames + 1))
        if self.timer > self.interval then
            self.timer = self.timer % self.interval
            self.currentFrame = math.max(1, (self.currentFrame + 1) % (#self.frames + 1))
            do Animation = Class{}
                function Animation:init(def)
                    self.frames = def.frames
                    self.interval = def.interval
                    self.timer = 0
                    self.currentFrame = 1
                end
                function Animation:update(dt)
                    -- no need to update if animation is only one frame
                    if #self.frames > 1 then
                        self.timer = self.timer + dt
                        if self.timer > self.interval then
                            self.timer = self.timer % self.interval
                            self.currentFrame = math.max(1, (self.currentFrame + 1) % (#self.frames + 1))
                        end
                    end
                end
                function Animation:getCurrentFrame()
                    return self.frames[self.currentFrame]
                end
